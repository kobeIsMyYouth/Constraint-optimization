import numpy as np

bounds = [(0, 20000.0), (0, 1.0e+6), (0, 1.0e+6), (0, 1.0e+6), (0, 4.0e+7), (0, 4e+7),
          (0, 4e+7), (100, 299.99),(100, 399.99),(100.01, 300), (100, 400), (100, 600),
          (0, 500), (0, 500), (0, 500), (0.01, 300), (0.01, 400), (-4.7, 6.25),
          (-4.7, 6.25), (-4.7, 6.25), (-4.7, 6.25), (-4.7, 6.25)]
x_opt = [236.430975504001054, 135.82847151732463, 204.818152544824585, 6446.54654059436416,
         3007540.83940215595, 4074188.65771341929, 32918270.5028952882, 130.075408394314167,
         170.817294970528621, 299.924591605478554, 399.258113423595205, 330.817294971142758,
         184.51831230897065, 248.64670239647424, 127.658546694545862, 269.182627528746707,
         160.000016724090955, 5.29788288102680571, 5.13529735903945728, 5.59531526444068827,
         5.43444479314453499, 5.07517453535834395]
y_opt = 236.430975504001

dim = 22
fmax = 20000
fmin = 0
vmax = 120237029848.21512
v = [47546.79577383339, 47546.79577383339,5.0e7,5.0e7, 6.0e7,6.0e7, 4.0e7,4.0e7, 3.7e7,3.7e7,
     3.6e7,3.6e7, 3.4e7,3.4e7, 6.0e10-4.0e7,6.0e10-4.0e7, 4.0e10-4.0e7,4.0e10-4.0e7,
     2.0e10-4.0e7, 2.0e10-4.0e7,500,500, 700,700, 10.85,10.85, 10.85,10.85, 10.85,10.85,
     10.85, 10.85,10.85,10.85, 5700, 5700,6000,6000, 5050,5050]
vn = 20

def f(X):
    y = X[0]
    g1 = -X[0] + X[1] ** 0.6 + X[2] ** 0.6 + X[3] ** 0.6

    h1 = X[4] - 100000.0 * X[7] + 1.0e+7 - 0.0001
    h1_ = -(X[4] - 100000.0 * X[7] + 1.0e+7) - 0.0001

    h2 = X[5] + 100000.0 * X[7] - 100000.0 * X[8] - 0.0001
    h22 = -(X[5] + 100000.0 * X[7] - 100000.0 * X[8]) - 0.0001

    h3 = X[6] + 100000.0 * X[8] - 5.0e+7 - 0.0001
    h33 = -(X[6] + 100000.0 * X[8] - 5.0e+7) - 0.0001

    h4 = X[4] + 100000.0 * X[9] - 3.3e+7 - 0.0001
    h44 = -(X[4] + 100000.0 * X[9] - 3.3e+7) - 0.0001

    h5 = X[5] + 100000.0 * X[10] - 4.4e+7 - 0.0001
    h55 = -(X[5] + 100000.0 * X[10] - 4.4e+7) - 0.0001

    h6 = X[6] + 100000.0 * X[11] - 6.6e+7 - 0.0001
    h66 = -(X[6] + 100000.0 * X[11] - 6.6e+7) - 0.0001

    h7 = X[4] - 120.0 * X[1] * X[12] - 0.0001
    h77 = -(X[4] - 120.0 * X[1] * X[12]) - 0.0001

    h8 = X[5] - 80.0 * X[2] * X[13] - 0.0001
    h88 = -(X[5] - 80.0 * X[2] * X[13]) - 0.0001

    h9 = X[6] - 40.0 * X[3] * X[14] - 0.0001
    h99 = -(X[6] - 40.0 * X[3] * X[14]) - 0.0001

    h10 = X[7] - X[10] + X[15] - 0.0001
    h100 = -(X[7] - X[10] + X[15]) - 0.0001

    h11 = X[8] - X[11] + X[16] - 0.0001
    h111 = -(X[8] - X[11] + X[16]) - 0.0001

    h12 = -X[17] + np.log(X[9] - 100.0) - 0.0001
    h122 = -(-X[17] + np.log(X[9] - 100.0)) - 0.0001

    h13 = -X[18] + np.log(-X[7] + 300.0) - 0.0001
    h133 = -(-X[18] + np.log(-X[7] + 300.0)) - 0.0001

    h14 = -X[19] + np.log(X[15]) - 0.0001
    h144 = -(-X[19] + np.log(X[15])) - 0.0001

    h15 = -X[20] + np.log(-X[8] + 400.0) - 0.0001
    h155 = -(-X[20] + np.log(-X[8] + 400.0)) - 0.0001

    h16 = -X[21] + np.log(X[16]) - 0.0001
    h166 = -(-X[21] + np.log(X[16])) - 0.0001

    h17 = -X[7] - X[9] + X[12] * X[17] - X[12] * X[18] + 400.0 - 0.0001
    h177 = -(-X[7] - X[9] + X[12] * X[17] - X[12] * X[18] + 400.0) - 0.0001

    h18 = X[7] - X[8] - X[10] + X[13] * X[19] - X[13] * X[20] + 400.0 - 0.0001
    h188 = -(X[7] - X[8] - X[10] + X[13] * X[19] - X[13] * X[20] + 400.0) - 0.0001

    h19 = X[8] - X[11] - 4.60517 * X[14] + X[14] * X[21] + 100.0 - 0.0001
    h199 = -(X[8] - X[11] - 4.60517 * X[14] + X[14] * X[21] + 100.0) - 0.0001

    return y, g1, h1, h1_, h2, h22, h3, h33, h4, h44, h5, h55, h6, h66,h7, h77,h8, h88,h9, h99,h10, h100,h11, h111,h12,h122, h13, h133,h14,h144, h15,h155, h16,h166, h17,h177, h18,h188, h19,h199

if __name__ == "__main__":
    print(np.log(400))